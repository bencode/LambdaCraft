{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [], :nextjournal/render-opts {:toc-visibility false, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render.navbar/render-items], :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility false, :atom-var-name->state {}, :ns #clerk/render-fn+opts [{:eval true} (ns pages.rendering-engine.ch2-dynamic-props)], :file "pages/rendering-engine/ch2-dynamic-props.clj", :scope pages.rendering-engine.ch2-dynamic-props, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../"} "Index"] [:span.mx-2 "•"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/bencode/LambdaCraft/blob/4209f011bdecf80819f19d354d2407c07214da50/apps/web/pages/rendering-engine/ch2-dynamic-props.clj"} "pages/rendering-engine/ch2-dynamic-props.clj" [:<> "@" [:span.tabular-nums "4209f01"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :description "← 上一节 | 返回目录 | 下一节 →"}, :blocks [{:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:link {:rel "stylesheet", :href "/css/style.css"}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "pages.rendering-engine.ch2-dynamic-props/anon-expr-5dtMgNLRaspstAizDL4p3EvQT8RqWA-result"}}, :nextjournal/blob-id "5dsiko9Gsd6xVZKo89mCiuc8BCcAcE"}, :nextjournal/render-opts {:id "pages.rendering-engine.ch2-dynamic-props/anon-expr-5dtMgNLRaspstAizDL4p3EvQT8RqWA-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-result], :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs))], :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value "#object[pages.rendering_engine.ch2_dynamic_props$read_md 0x10d7f17 \"pages.rendering_engine.ch2_dynamic_props$read_md@10d7f17\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x))))], :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "pages.rendering-engine.ch2-dynamic-props/read-md-result"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "pages.rendering-engine.ch2-dynamic-props/read-md-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-result], :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs))], :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "pages.rendering-engine.ch2-dynamic-props/markdown-5duKMMGSwsfYxnb7UWPEaSypvpsc65"} [:p [:a {:href "/pages/rendering-engine/ch1-basic-rendering"} [:<> "← 上一节"]] [:<> " | "] [:a {:href "/pages/rendering-engine"} [:<> "返回目录"]] [:<> " | "] [:a {:href "/pages/rendering-engine/ch3-action-store"} [:<> "下一节 →"]]] [:hr]], :nextjournal/render-opts {:id "pages.rendering-engine.ch2-dynamic-props/markdown-5duKMMGSwsfYxnb7UWPEaSypvpsc65"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} identity], :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(clerk/md (read-md \"ch2-dynamic-props.md\"))", :nextjournal/render-opts {:loc {:line 20, :end-line 20, :column 1, :end-column 44}, :id "pages.rendering-engine.ch2-dynamic-props/anon-expr-5dsw7iXx8fsN9E3XFck3pVDfWJyN2T-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code-block], :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id nil} ["h1" {:id "第2节：支持动态属性"} [:<> "第2节：支持动态属性"]] [:blockquote [:p [:<> "这是《Schema驱动的前端渲染引擎设计和实现》系列的第二篇。上一节我们实现了基础的渲染功能，这一节将引入表达式系统，让属性可以动态求值。"]]] ["h2" {:id "2.1-遇到新需求"} [:<> "2.1 遇到新需求"]] [:p [:<> "现在有个新需求："]] [:blockquote [:p [:<> "页面顶部要显示 \"欢迎，张三\"，其中 \"张三\" 是当前登录用户的名字，每个用户看到的都是自己的名字。"]]] [:p [:<> "第一版实现遇到了问题："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "// v0.1 只能这样写\n{\n  type: 'Text',\n  props: { content: '欢迎，张三' }  // 写死了！\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "我们需要让属性值变成动态的。"]] ["h2" {:id "2.2-方案探索"} [:<> "2.2 方案探索"]] ["h3" {:id "方案1：模板字符串（amis-的方案）"} [:<> "方案1：模板字符串（amis 的方案）"]] [:p [:<> "amis 使用模板语法："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "{\n  \"type\": \"text\",\n  \"content\": \"欢迎，${user.name}\"\n}", :nextjournal/render-opts {:language "json"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "实现："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "function evalTemplate(template: string, data: any) {\n  // 替换 ${expr} 为实际值\n  return template.replace(/\\$\\{([^}]+)\\}/g, (_, expr) => {\n    return eval(`data.${expr}`)\n  })\n}\n\n// 使用\nconst content = evalTemplate('欢迎，${user.name}', { user: { name: '张三' } })\n// => '欢迎，张三'", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:strong [:<> "问题："]]] [:ol [:li [:<> [:<> "需要解析模板语法"]]] [:li [:<> [:<> "静态文本和动态文本没有区分"]]] [:li [:<> [:<> "如何处理对象类型的属性？"]]]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "{\n  \"type\": \"input\",\n  \"placeholder\": \"请输入${field.label}\",  // 字符串 ✓\n  \"disabled\": \"${user.role !== 'admin'}\"  // 布尔值 ✗ 会变成字符串\n}", :nextjournal/render-opts {:language "json"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h3" {:id "方案2：表达式前缀（formily-的方案）"} [:<> "方案2：表达式前缀（formily 的方案）"]] [:p [:<> "formily 使用 "] [:code [:<> "{{}}"]] [:<> " 包裹表达式："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "{\n  'x-component-props': {\n    placeholder: '请输入用户名',    // 静态\n    disabled: '{{!$self.value}}'  // 动态，需要求值\n  }\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:strong [:<> "问题："]]] [:ol [:li [:<> [:<> "还是需要解析 "] [:code [:<> "{{}}"]]]] [:li [:<> [:<> "区分不够直观"]]]] ["h3" {:id "方案3：后缀标记"} [:<> "方案3：后缀标记"]] [:p [:<> "我们用一个比较简单的方案："] [:strong [:<> "属性名加 "] [:code [:<> "$"]] [:<> " 后缀表示需要求值"]]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "{\n  type: 'Text',\n  props: {\n    content: '欢迎，',           // 静态属性\n    content$: 'user.name'        // 动态属性，会覆盖 content\n  }\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "优势："]] [:ol [:li [:<> [:<> "不需要解析字符串"]]] [:li [:<> [:<> "静态和动态属性一眼能看出来"]]] [:li [:<> [:<> "TypeScript 类型友好"]]] [:li [:<> [:<> "支持所有类型的值"]]]] ["h2" {:id "2.3-实现表达式系统"} [:<> "2.3 实现表达式系统"]] ["h3" {:id "2.3.1-基础版本"} [:<> "2.3.1 基础版本"]] [:p [:<> "首先定义上下文类型："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "type Context = {\n  user: {\n    name: string\n    role: string\n  }\n  // 可以扩展更多上下文数据\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "实现求值函数："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "function evaluate(expr: string, context: Context): unknown {\n  // 使用 Function 构造函数安全地执行表达式\n  try {\n    const fn = new Function('context', `with(context) { return ${expr} }`)\n    return fn(context)\n  } catch (e) {\n    console.error(`表达式执行错误: ${expr}`, e)\n    return undefined\n  }\n}\n\n// 测试\nconst context = { user: { name: '张三', role: 'admin' } }\nconsole.log(evaluate('user.name', context))           // '张三'\nconsole.log(evaluate('user.role === \"admin\"', context)) // true", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h3" {:id "2.3.2-评估-props"} [:<> "2.3.2 评估 Props"]] [:p [:<> "现在我们需要在渲染时评估带 "] [:code [:<> "$"]] [:<> " 的属性："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "function evaluateProps(\n  props: Record<string, unknown>,\n  context: Context\n): Record<string, unknown> {\n  const result: Record<string, unknown> = {}\n\n  for (const key in props) {\n    // 检查是否是动态属性\n    if (key.endsWith('$')) {\n      const actualKey = key.slice(0, -1)  // 去掉 $\n      const expr = props[key] as string\n      result[actualKey] = evaluate(expr, context)\n    } else {\n      // 静态属性直接复制\n      result[key] = props[key]\n    }\n  }\n\n  return result\n}\n\n// 测试\nconst props = {\n  content: '默认值',\n  content$: 'user.name',\n  disabled$: 'user.role !== \"admin\"'\n}\n\nconst context = { user: { name: '张三', role: 'admin' } }\nconst evaluated = evaluateProps(props, context)\n\nconsole.log(evaluated)\n// => { content: '张三', disabled: false }", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h3" {:id "2.3.3-集成到渲染引擎"} [:<> "2.3.3 集成到渲染引擎"]] [:p [:<> "更新我们的 createEngine 函数，让 context 在 render 时传入："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "function createEngine(registry: ReturnType<typeof createRegistry>) {\n  const render = (schema: Schema, context: Context): React.ReactElement => {\n    const Component = registry.get(schema.type)\n\n    if (!Component) {\n      return <div style={{ color: 'red' }}>\n        Component \"{schema.type}\" not found\n      </div>\n    }\n\n    // 评估 props\n    const props = schema.props\n      ? evaluateProps(schema.props, context)\n      : {}\n\n    // 递归渲染子节点\n    if (schema.children && schema.children.length > 0) {\n      props.children = schema.children.map((child, index) => (\n        <React.Fragment key={index}>\n          {render(child, context)}\n        </React.Fragment>\n      ))\n    }\n\n    return createElement(Component, props)\n  }\n\n  return render\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h2" {:id "2.4-完整示例"} [:<> "2.4 完整示例"]] [:p [:<> "现在我们可以使用动态属性了："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "// 模拟当前登录用户\nconst context = {\n  user: {\n    name: '张三',\n    role: 'admin',\n    avatar: 'https://example.com/avatar.jpg'\n  }\n}\n\n// Schema 配置\nconst schema: Schema = {\n  type: 'Box',\n  children: [\n    // 静态文本\n    {\n      type: 'Text',\n      props: {\n        content: '欢迎，',\n        style: { fontSize: 14, color: '#666' }\n      }\n    },\n    // 动态用户名\n    {\n      type: 'Text',\n      props: {\n        content$: 'user.name',  // 动态求值\n        style: { fontSize: 14, fontWeight: 'bold', color: '#000' }\n      }\n    },\n    // 根据角色显示不同内容\n    {\n      type: 'Text',\n      props: {\n        content$: 'user.role === \"admin\" ? \"（管理员）\" : \"（普通用户）\"',\n        style: { fontSize: 12, color: '#999' }\n      }\n    }\n  ]\n}\n\n// 创建渲染函数\nconst render = createEngine(registry)\n\nfunction App() {\n  return render(schema, context)\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:strong [:<> "渲染结果："]]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "欢迎，张三（管理员）", :nextjournal/render-opts {:language "clojure"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "如果 "] [:code [:<> "context.user.role"]] [:<> " 是 "] [:code [:<> "'user'"]] [:<> "，则显示："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "欢迎，张三（普通用户）", :nextjournal/render-opts {:language "clojure"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h2" {:id "2.5-优化：表达式缓存"} [:<> "2.5 优化：表达式缓存"]] [:p [:<> "每次渲染都编译表达式会有性能问题，我们加入缓存："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "function createEvaluator() {\n  const cache = new Map<string, Function>()\n\n  return (expr: string, context: Context): unknown => {\n    // 从缓存获取\n    let fn = cache.get(expr)\n\n    if (!fn) {\n      // 编译并缓存\n      try {\n        fn = new Function('context', `with(context) { return ${expr} }`)\n        cache.set(expr, fn)\n      } catch (e) {\n        console.error(`表达式编译错误: ${expr}`, e)\n        return undefined\n      }\n    }\n\n    // 执行\n    try {\n      return fn(context)\n    } catch (e) {\n      console.error(`表达式执行错误: ${expr}`, e)\n      return undefined\n    }\n  }\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "更新 evaluateProps："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "function evaluateProps(\n  props: Record<string, unknown>,\n  context: Context,\n  evaluate: ReturnType<typeof createEvaluator>\n): Record<string, unknown> {\n  const result: Record<string, unknown> = {}\n\n  for (const key in props) {\n    if (key.endsWith('$')) {\n      const actualKey = key.slice(0, -1)\n      const expr = props[key] as string\n      result[actualKey] = evaluate(expr, context)\n    } else {\n      result[key] = props[key]\n    }\n  }\n\n  return result\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "更新 createEngine："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "function createEngine(registry: ReturnType<typeof createRegistry>) {\n  const evaluate = createEvaluator()  // 创建求值器\n\n  const render = (schema: Schema, context: Context): React.ReactElement => {\n    const Component = registry.get(schema.type)\n\n    if (!Component) {\n      return <div style={{ color: 'red' }}>\n        Component \"{schema.type}\" not found\n      </div>\n    }\n\n    const props = schema.props\n      ? evaluateProps(schema.props, context, evaluate)\n      : {}\n\n    if (schema.children && schema.children.length > 0) {\n      props.children = schema.children.map((child, index) => (\n        <React.Fragment key={index}>\n          {render(child, context)}\n        </React.Fragment>\n      ))\n    }\n\n    return createElement(Component, props)\n  }\n\n  return render\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h2" {:id "2.6-支持函数表达式"} [:<> "2.6 支持函数表达式"]] [:p [:<> "现在我们还需要支持更复杂的场景，比如格式化日期："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "{\n  type: 'Text',\n  props: {\n    content$: `\n      (() => {\n        const date = new Date()\n        return date.toLocaleDateString()\n      })()\n    `\n  }\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "或者提供工具函数："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "// 扩展 Context\ntype Context = {\n  user: {\n    name: string\n    role: string\n  }\n  // 工具函数\n  utils: {\n    formatDate: (date: Date) => string\n    formatCurrency: (amount: number) => string\n  }\n}\n\n// Schema 中使用\n{\n  type: 'Text',\n  props: {\n    content$: 'utils.formatDate(new Date())'\n  }\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h2" {:id "2.7-实战：动态表单"} [:<> "2.7 实战：动态表单"]] [:p [:<> "现在我们可以实现一个真实场景：根据用户角色显示不同的表单字段。"]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "const formSchema: Schema = {\n  type: 'Form',\n  children: [\n    // 用户名（所有人可见）\n    {\n      type: 'Box',\n      children: [\n        { type: 'Text', props: { content: '用户名：' } },\n        { type: 'Input', props: { placeholder: '请输入用户名' } }\n      ]\n    },\n\n    // 邮箱（所有人可见）\n    {\n      type: 'Box',\n      children: [\n        { type: 'Text', props: { content: '邮箱：' } },\n        { type: 'Input', props: { placeholder: '请输入邮箱' } }\n      ]\n    },\n\n    // 权限设置（仅管理员可见）\n    {\n      type: 'Box',\n      props: {\n        style$: 'user.role === \"admin\" ? {} : { display: \"none\" }'\n      },\n      children: [\n        { type: 'Text', props: { content: '权限：' } },\n        { type: 'Input', props: { placeholder: '设置权限' } }\n      ]\n    },\n\n    // 提交按钮（文案根据角色变化）\n    {\n      type: 'Button',\n      props: {\n        label$: 'user.role === \"admin\" ? \"保存并审核\" : \"提交\"'\n      }\n    }\n  ]\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "当 "] [:code [:<> "user.role === 'admin'"]] [:<> " 时显示："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "用户名：[_______]\n邮箱：  [_______]\n权限：  [_______]\n[保存并审核]", :nextjournal/render-opts {:language "clojure"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "当 "] [:code [:<> "user.role === 'user'"]] [:<> " 时显示："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "用户名：[_______]\n邮箱：  [_______]\n[提交]", :nextjournal/render-opts {:language "clojure"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h2" {:id "2.8-完整代码"} [:<> "2.8 完整代码"]] [:p [:<> "让我们整合所有功能："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "import React, { createElement } from 'react'\n\n// ============ 类型定义 ============\ntype Schema = {\n  type: string\n  props?: Record<string, unknown>\n  children?: Schema[]\n}\n\ntype Context = {\n  user: {\n    name: string\n    role: string\n  }\n}\n\n// ============ 表达式求值器 ============\nfunction createEvaluator() {\n  const cache = new Map<string, Function>()\n\n  return (expr: string, context: Context): unknown => {\n    let fn = cache.get(expr)\n\n    if (!fn) {\n      try {\n        fn = new Function('context', `with(context) { return ${expr} }`)\n        cache.set(expr, fn)\n      } catch (e) {\n        console.error(`表达式编译错误: ${expr}`, e)\n        return undefined\n      }\n    }\n\n    try {\n      return fn(context)\n    } catch (e) {\n      console.error(`表达式执行错误: ${expr}`, e)\n      return undefined\n    }\n  }\n}\n\n// ============ Props 评估 ============\nfunction evaluateProps(\n  props: Record<string, unknown>,\n  context: Context,\n  evaluate: ReturnType<typeof createEvaluator>\n): Record<string, unknown> {\n  const result: Record<string, unknown> = {}\n\n  for (const key in props) {\n    if (key.endsWith('$')) {\n      const actualKey = key.slice(0, -1)\n      const expr = props[key] as string\n      result[actualKey] = evaluate(expr, context)\n    } else {\n      result[key] = props[key]\n    }\n  }\n\n  return result\n}\n\n// ============ 组件注册 ============\ntype Registry = {\n  register: (name: string, component: React.ComponentType<any>) => void\n  get: (name: string) => React.ComponentType<any> | undefined\n}\n\nfunction createRegistry(): Registry {\n  const components: Record<string, React.ComponentType<any>> = {}\n\n  return {\n    register: (name, component) => {\n      components[name] = component\n    },\n    get: (name) => components[name]\n  }\n}\n\n// ============ 渲染引擎 ============\nfunction createEngine(registry: Registry) {\n  const evaluate = createEvaluator()\n\n  const render = (schema: Schema, context: Context): React.ReactElement => {\n    const Component = registry.get(schema.type)\n\n    if (!Component) {\n      return <div style={{ color: 'red' }}>\n        Component \"{schema.type}\" not found\n      </div>\n    }\n\n    const props = schema.props\n      ? evaluateProps(schema.props, context, evaluate)\n      : {}\n\n    if (schema.children && schema.children.length > 0) {\n      props.children = schema.children.map((child, index) => (\n        <React.Fragment key={index}>\n          {render(child, context)}\n        </React.Fragment>\n      ))\n    }\n\n    return createElement(Component, props)\n  }\n\n  return render\n}\n\n// ============ 使用示例 ============\nconst registry = createRegistry()\nregistry.register('Text', ({ content }) => <span>{content}</span>)\nregistry.register('Button', ({ label }) => <button>{label}</button>)\nregistry.register('Box', ({ children }) => <div>{children}</div>)\n\nconst render = createEngine(registry)\n\nconst schema = {\n  type: 'Box',\n  children: [\n    { type: 'Text', props: { content: '欢迎，' } },\n    { type: 'Text', props: { content$: 'user.name' } }\n  ]\n}\n\nfunction App() {\n  const context = { user: { name: '张三', role: 'admin' } }\n  return render(schema, context)\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h2" {:id "2.9-当前实现的局限性"} [:<> "2.9 当前实现的局限性"]] [:p [:<> "我们已经支持了动态属性，但还有新问题："]] ["h3" {:id "1.-context-是静态的"} [:<> "1. Context 是静态的"]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "// Context 在创建 Engine 时就固定了\nconst render = createEngine(registry, context)\n\n// 如果 context 变化，需要重新创建 render 函数？", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h3" {:id "2.-无法响应用户交互"} [:<> "2. 无法响应用户交互"]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "// 用户点击按钮后，如何更新 context？\n{\n  type: 'Button',\n  props: {\n    label: '刷新',\n    onClick: '???' // 如何配置点击事件？\n  }\n}", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h3" {:id "3.-组件之间仍然无法通信"} [:<> "3. 组件之间仍然无法通信"]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "// 如何让 Input 的值影响 Button 的 disabled 状态？\n[\n  {\n    type: 'Input',\n    // 用户输入的值怎么传递出去？\n  },\n  {\n    type: 'Button',\n    props: {\n      disabled$: '???' // 如何访问 Input 的值？\n    }\n  }\n]", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h2" {:id "2.10-本节小结"} [:<> "2.10 本节小结"]] [:p [:<> "这一节我们引入了表达式系统，让属性可以动态求值。"]] [:p [:<> "实现的功能："]] [:ul [:li [:<> [:<> "用 "] [:code [:<> "$"]] [:<> " 后缀标识动态属性"]]] [:li [:<> [:<> "用 Function 构造函数执行表达式"]]] [:li [:<> [:<> "表达式缓存"]]] [:li [:<> [:<> "支持复杂表达式"]]]] [:p [:<> "核心代码："]] [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:nextjournal/value [:div.code-viewer.code-listing [#clerk/render-fn+opts [{:eval true} nextjournal.clerk.render/inspect-presented] {:path [0], :nextjournal/value "// 1. 后缀语法\nprops: {\n  label: '静态文本',\n  label$: 'user.name'  // 动态求值\n}\n\n// 2. 表达式求值器\nconst evaluate = createEvaluator()\nevaluate(expr, context)\n\n// 3. Props 评估\nfunction evaluateProps(props, context, evaluate) {\n  const result = {}\n  for (const key in props) {\n    if (key.endsWith('$')) {\n      const actualKey = key.slice(0, -1)\n      result[actualKey] = evaluate(props[key], context)\n    } else {\n      result[key] = props[key]\n    }\n  }\n  return result\n}\n\n// 4. 创建引擎\nconst render = createEngine(registry, context)", :nextjournal/render-opts {:language "typescript"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-code], :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-html], :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "采用的设计："]] [:ul [:li [:<> [:<> "纯函数，无副作用"]]] [:li [:<> [:<> "闭包管理缓存"]]] [:li [:<> [:<> "高阶函数组合"]]]] [:p [:<> "还没解决的问题："]] [:ul [:li [:<> [:<> "Context 是在 render 时传入的，如何让它可以动态更新？"]]] [:li [:<> [:<> "如何处理用户交互（onClick 等事件）？"]]] [:li [:<> [:<> "组件之间如何通信？"]]]] [:p [:<> "下一节我们将解决事件处理的问题：如何让组件可以交互。"]]], :nextjournal/visibility {:code :show, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} identity], :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}, :nextjournal/render-opts {:id "pages.rendering-engine.ch2-dynamic-props/anon-expr-5dsw7iXx8fsN9E3XFck3pVDfWJyN2T-result-1"}}, :nextjournal/blob-id "5duCunjwDZCef4DayU5ZJVoVVngNCN"}, :nextjournal/render-opts {:id "pages.rendering-engine.ch2-dynamic-props/anon-expr-5dsw7iXx8fsN9E3XFck3pVDfWJyN2T-result-1"}, :nextjournal/visibility {:code :show, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-result], :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs))], :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "pages.rendering-engine.ch2-dynamic-props/markdown-5druhR8SjTRGuKGmMqHJA8QyWsGMi3"} [:hr] [:p [:a {:href "/pages/rendering-engine/ch1-basic-rendering"} [:<> "← 上一节"]] [:<> " | "] [:a {:href "/pages/rendering-engine"} [:<> "返回目录"]] [:<> " | "] [:a {:href "/pages/rendering-engine/ch3-action-store"} [:<> "下一节 →"]]]], :nextjournal/render-opts {:id "pages.rendering-engine.ch2-dynamic-props/markdown-5druhR8SjTRGuKGmMqHJA8QyWsGMi3"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} identity], :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #clerk/render-fn+opts [{:render-evaluator :sci} nextjournal.clerk.render/render-notebook], :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}